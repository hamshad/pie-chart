{"version":3,"file":"index.esm.js","sources":["../src/RoundedPieChart.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport interface PieChartSegment {\n  value: number;\n  label: string;\n  color: string;\n}\n\nexport interface RoundedPieChartProps {\n  data: PieChartSegment[];\n  size?: number;\n  innerRadiusRatio?: number;\n  cornerRadius?: number;\n  gap?: number;\n  hoverOffset?: number;\n  animationDuration?: number;\n  className?: string;\n  showLabelsOnHover?: boolean;\n  labelDistance?: number;\n}\n\nexport const RoundedPieChart: React.FC<RoundedPieChartProps> = ({\n  data,\n  size = 300,\n  innerRadiusRatio = 0.6875,\n  cornerRadius = 8,\n  gap = 3,\n  hoverOffset = 5,\n  animationDuration = 600,\n  className = '',\n  showLabelsOnHover = true,\n  labelDistance = 30,\n}) => {\n  const [mounted, setMounted] = useState(false);\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const total = data.reduce((sum, item) => sum + Math.abs(item.value), 0);\n  const radius = (size * 0.8) / 2;\n  const innerRadius = radius * innerRadiusRatio;\n  const centerX = size / 2;\n  const centerY = size / 2;\n\n  const polarToCartesian = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    angleInDegrees: number\n  ) => {\n    const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians),\n    };\n  };\n\n  const createRoundedArcPath = (\n    startAngle: number,\n    endAngle: number,\n    outerR: number,\n    innerR: number,\n    cornerR: number\n  ) => {\n    startAngle += gap / 2;\n    endAngle -= gap / 2;\n\n    const outerStart = polarToCartesian(centerX, centerY, outerR, startAngle);\n    const outerEnd = polarToCartesian(centerX, centerY, outerR, endAngle);\n    const innerStart = polarToCartesian(centerX, centerY, innerR, startAngle);\n    const innerEnd = polarToCartesian(centerX, centerY, innerR, endAngle);\n\n    const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n\n    return [\n      `M ${outerStart.x} ${outerStart.y}`,\n      `A ${outerR} ${outerR} 0 ${largeArcFlag} 1 ${outerEnd.x} ${outerEnd.y}`,\n      `A ${cornerR} ${cornerR} 0 0 1 ${innerEnd.x} ${innerEnd.y}`,\n      `A ${innerR} ${innerR} 0 ${largeArcFlag} 0 ${innerStart.x} ${innerStart.y}`,\n      `A ${cornerR} ${cornerR} 0 0 1 ${outerStart.x} ${outerStart.y}`,\n      'Z',\n    ].join(' ');\n  };\n\n  const getLabelPosition = (startAngle: number, endAngle: number) => {\n    const midAngle = (startAngle + endAngle) / 2;\n    const labelRadius = radius + labelDistance;\n    return polarToCartesian(centerX, centerY, labelRadius, midAngle);\n  };\n\n  let currentAngle = 0;\n  const segments = data.map((item, index) => {\n    const percentage = Math.abs(item.value) / total;\n    const angle = percentage * 360;\n    const startAngle = currentAngle;\n    const endAngle = currentAngle + angle;\n    const isHovered = hoveredIndex === index;\n\n    currentAngle = endAngle;\n\n    const displayAngle = mounted ? angle : 0;\n    const displayEndAngle = startAngle + displayAngle;\n\n    const path = createRoundedArcPath(\n      startAngle,\n      displayEndAngle,\n      isHovered ? radius + hoverOffset : radius,\n      innerRadius,\n      cornerRadius\n    );\n\n    const labelPos = getLabelPosition(startAngle, endAngle);\n    const midAngle = (startAngle + endAngle) / 2;\n    const dotRadius = isHovered ? radius + hoverOffset : radius;\n    const dotPos = polarToCartesian(centerX, centerY, dotRadius, midAngle);\n\n    return {\n      ...item,\n      path,\n      startAngle,\n      endAngle,\n      labelPos,\n      dotPos,\n      index,\n    };\n  });\n\n  return (\n    <svg\n      width={size}\n      height={size}\n      viewBox={`0 0 ${size} ${size}`}\n      className={className}\n    >\n      <defs>\n        <filter id=\"shadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"3\" floodOpacity=\"0.2\" />\n        </filter>\n      </defs>\n\n      {segments.map((segment) => (\n        <g key={segment.index}>\n          <path\n            d={segment.path}\n            fill={segment.color}\n            style={{\n              transition: `all ${animationDuration}ms cubic-bezier(0.4, 0, 0.2, 1)`,\n              filter: hoveredIndex === segment.index ? 'url(#shadow)' : 'none',\n              cursor: 'pointer',\n            }}\n            onMouseEnter={() => setHoveredIndex(segment.index)}\n            onMouseLeave={() => setHoveredIndex(null)}\n          />\n\n          {showLabelsOnHover && (\n            <g\n              style={{\n                opacity: hoveredIndex === segment.index ? 1 : 0,\n                transition: 'opacity 0.3s ease',\n                transform:\n                  hoveredIndex === segment.index ? 'scale(1.1)' : 'scale(1)',\n                transformOrigin: `${segment.labelPos.x}px ${segment.labelPos.y}px`,\n                pointerEvents: 'none',\n              }}\n            >\n              <text\n                x={segment.labelPos.x}\n                y={segment.labelPos.y}\n                textAnchor=\"middle\"\n                dominantBaseline=\"middle\"\n                style={{\n                  fontSize: hoveredIndex === segment.index ? '16px' : '14px',\n                  fontWeight: hoveredIndex === segment.index ? '600' : '500',\n                  fill: '#374151',\n                  transition: 'all 0.3s ease',\n                }}\n              >\n                {segment.label}\n              </text>\n\n              <line\n                x1={segment.dotPos.x}\n                y1={segment.dotPos.y}\n                x2={segment.labelPos.x}\n                y2={segment.labelPos.y - 5}\n                stroke=\"#9CA3AF\"\n                strokeWidth=\"1\"\n                style={{\n                  transition: `all ${animationDuration}ms cubic-bezier(0.4, 0, 0.2, 1)`,\n                }}\n              />\n            </g>\n          )}\n        </g>\n      ))}\n    </svg>\n  );\n};\n\nexport default RoundedPieChart;"],"names":[],"mappings":"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"}